import{b as s,d as t,_ as d}from"./index-dFe5MJd9.js";const n=s(r=>({products:[],loading:!1,setProducts:a=>r({products:a}),createProduct:async a=>{r({loading:!0});try{const o=await t.post("/products",a);r(e=>({products:[...e.products,o.data],loading:!1}))}catch(o){d.error(o.response.data.error),r({loading:!1})}},fetchAllProducts:async()=>{r({loading:!0});try{const a=await t.get("/products");r({products:a.data.products,loading:!1})}catch(a){r({loading:!1}),d.error(a.response.data.error||"Failed to fetch products")}},fetchProductsByCategory:async a=>{r({loading:!0});try{const o=await t.get(`/products/category/${a}`);r({products:o.data.products,loading:!1})}catch(o){r({loading:!1}),d.error(o.response.data.error||"Failed to fetch products")}},deleteProduct:async a=>{r({loading:!0});try{await t.delete(`/products/${a}`),r(o=>({products:o.products.filter(e=>e._id!==a),loading:!1}))}catch(o){r({loading:!1}),d.error(o.response.data.error||"Failed to delete product")}},toggleFeaturedProduct:async a=>{r({loading:!0});try{const o=await t.patch(`/products/${a}`);r(e=>({products:e.products.map(c=>c._id===a?{...c,isFeatured:o.data.isFeatured}:c),loading:!1}))}catch(o){r({loading:!1}),d.error(o.response.data.error||"Failed to update product")}},fetchFeaturedProducts:async()=>{r({loading:!0});try{const a=await t.get("/products/featured");r({products:a.data,loading:!1})}catch(a){r({loading:!1}),console.log("Error fetching featured products:",a)}}}));export{n as u};
